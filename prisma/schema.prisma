// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Person {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  fatherLastName String
  motherLastName String
  phone          String
  email          String

  User User?
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  password     String
  isSuperAdmin Boolean
  userRoles    UserRoles[] // [{moduleName: "wpp", roleName: "Admin"}, {moduleName: "m2", roleName: "User"}] @map("roles")
  modules      ModulesRoles // {vis: "Admin", wpp: "User"}

  personId String   @unique @db.ObjectId
  roleIDs  String[] @db.ObjectId

  Person Person @relation(fields: [personId], references: [id])
  Roles  Role[] @relation(fields: [roleIDs], references: [id])
  // TOKEN: Person.name, username, roles: {wpp: "Admin", vis: "User", cal: undefined}
}

// Controlled on the Database
model Module {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String // Whatsapp, Maps, CallCenter, etc
  key  String // wpp, maps, cc, etc

  Roles Role[]
}

model Role {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String // Admin, User, etc
  moduleId String   @db.ObjectId
  userIDs  String[] @db.ObjectId

  Module Module @relation(fields: [moduleId], references: [id])
  Users  User[] @relation(fields: [userIDs], references: [id])
}

// Fully controlled by the Frontend
type UserRoles {
  moduleName String
  roleName   String
}

// Controlled by Backend and Frontend
type ModulesRoles {
  vis VisorRoles?
  wha WhaRoles?
}

enum VisorRoles {
  Admin
  User
  Viewer
}

enum WhaRoles {
  Admin
  User
  Sender
}
